# Rock-paper-scissors-lizard-Spock template
import random

# The key idea of this program is to equate the strings
# "rock", "paper", "scissors", "lizard", "Spock" to numbers
# as follows:
#
# 0 - rock
# 1 - Spock
# 2 - paper
# 3 - lizard
# 4 - scissors

# Dict converst name to number

# Helper function name to number
def name_to_number(name):
    if name == "rock":
        return 0
    elif name == "Spock":
        return 1
    elif name == "paper":
        return 2
    elif name == "lizard":
        return 3
    elif name == "scissors":
        return 4
    else:
        raise NameError("Oops!  That was not a valid input.  Try again...")

# Helper function number to name        
def number_to_name(number):
    if number == 0:
        return "rock"
    elif number == 1: 
        return "Spock"
    elif number == 2:
        return "paper"
    elif number == 3:
        return "lizard"
    elif number == 4: 
        return "scissors"
    else: 
        raise NameError("Oops. That isn't a valid number.")

# Function takes input of RPSLS and plays against computer
def rpsls(player_choice):
    player_number = name_to_number(player_choice)
    computer_number = random.randrange(0, 5)
    computer_choice = number_to_name(computer_number)
    if player_number == computer_number:
        print """Player chooses %s. \nComputer chooses %s. \nTIE! \n""" %(player_choice, computer_choice)

    elif (player_number - computer_number) % 5 <= 2:
        print """Player chooses %s. \nComputer chooses %s. \nPlayer wins! \n """ %(player_choice, computer_choice)
    else:
        print """Player chooses %s. \nComputer chooses %s. \nComputer wins! \n""" %(player_choice, computer_choice)

# Test the functions        
rpsls("rock")
rpsls("Spock")
rpsls("paper")
rpsls("lizard")
rpsls("scissors")
